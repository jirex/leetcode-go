#+title: 三数之和

* 15. 三数之和

#+begin_src go :main no
  package main

  import (
      "fmt"
      "sort"
  )

  func main() {
      fmt.Println(threeSum([]int{-1, 0, 1, 2, -1, -4}))
  }

  func threeSum(nums []int) [][]int {
      n := len(nums)
      ans := [][]int{}

      sort.Ints(nums)

      for first := 0; first < n; first++ {
          if first > 0 && nums[first] == nums[first-1] {
              continue
          }

          third := n - 1
          target := -1 * nums[first]

          for second := first + 1; second < n; second++ {
              if second > first+1 && nums[second] == nums[second-1] {
                  continue
              }

              for second < third && nums[second]+nums[third] > target {
                  third--
              }

              if second == third {
                  break
              }

              if nums[second]+nums[third] == target {
                  ans = append(ans, []int{nums[first], nums[second], nums[third]})
              }
          }
      }

      return ans
  }
#+end_src

#+RESULTS:
: [[-1 -1 2] [-1 0 1]]
