#+title: 四数之和

* 18. 四数之和

#+begin_src go :main no
  package main

  import (
      "fmt"
      "sort"
  )

  func main() {
      fmt.Println(fourSum([]int{1, 0, -1, 0, -2, 2}, 0))
  }

  func fourSum(nums []int, target int) [][]int {
      var re [][]int

      n := len(nums)

      sort.Ints(nums)

      for i := 0; i < n-3; i++ {
          n1 := nums[i]
          if i > 0 && n1 == nums[i-1] {
              continue
          }

          for j := i + 1; j < n-2; j++ {
              n2 := nums[j]

              if j > i+1 && n2 == nums[j-1] {
                  continue
              }

              l := j + 1
              r := n - 1

              for l < r {
                  n3 := nums[l]
                  n4 := nums[r]

                  sum := n1 + n2 + n3 + n4

                  if sum > target {
                      r--
                  } else if sum < target {
                      l++
                  } else {
                      re = append(re, []int{n1, n2, n3, n4})

                      for l < r && n3 == nums[l+1] {
                          l++
                      }

                      for l < r && n4 == nums[r-1] {
                          r--
                      }
                      l++
                      r--
                  }
              }
          }

      }
      return re
  }
#+end_src

#+RESULTS:
: [[-2 -1 1 2] [-2 0 0 2] [-1 0 0 1]]
