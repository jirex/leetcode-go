#+title: 双指针数组

* 26. 删除有序数组中的重复项

#+begin_src go
  func removeDuplicates(nums []int) int {
      if len(nums) == 0 {
          return 0
      }

      slow := 0
      fast := 0

      for fast < len(nums) {
          if nums[slow] != nums[fast] {
              slow++
              nums[slow] = nums[fast]
          }
          fast++
      }

      return slow + 1
  }
#+end_src

* 83. 删除排序链表中的重复元素

#+begin_src go
  func deleteDuplicates(head *ListNode) *ListNode {
      if head == nil {
          return head
      }

      fast, slow := head, head

      for fast != nil {
          if slow.Val != fast.Val {
              slow.Next = fast
              slow = slow.Next
          }
          fast = fast.Next
      }

      slow.Next = nil
      return head
  }
#+end_src
